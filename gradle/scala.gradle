apply plugin: 'scala'
apply plugin: 'idea'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    implementation 'org.scala-lang:scala-library:2.12.8'
    testImplementation 'org.scalatest:scalatest_2.12:3.0.5'
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output + sourceSets.test.output
        runtimeClasspath += sourceSets.main.output + sourceSets.test.output

        scala.srcDir file('src/it/scala')
        resources.srcDir file('src/it/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
    integrationTestImplementation.extendsFrom testImplementation
}

idea {
    module {
        testSourceDirs += file('src/it/scala')
        testResourceDirs += file('src/it/resources')

        scopes.TEST.plus += configurations.integrationTestCompile
        scopes.TEST.plus += configurations.integrationTestRuntime
    }
}

task spec(dependsOn: ['testClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = [
        '-R', 'build/classes/scala/test',
        '-u', 'build/test-results/test',
        '-o'
    ]
    classpath = sourceSets.test.runtimeClasspath
}

task integrationSpec(dependsOn: ['integrationTestClasses'], type: JavaExec) {
    main = 'org.scalatest.tools.Runner'
    args = [
        '-R', 'build/classes/scala/integrationTest',
        '-u', 'build/test-results/test',
        '-o'
    ]
    classpath = sourceSets.integrationTest.runtimeClasspath
}