# Scala CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/sample-config/ for more details
#

job_defaults: &job_defaults
  docker:
  - image: circleci/openjdk:8-jdk

  working_directory: ~/repo

  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m

commands:
  run_integration_test:
    description: "Runs integration tests against a Docker version and stores the results"

    parameters:
      docker_version:
        type: string

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: gradle dependencies

    - save_cache:
        paths:
        - ~/.gradle
        key: v1-dependencies--{{ checksum "build.gradle" }}

    - setup_remote_docker:
        version: << parameters.docker_version >>
        docker_layer_caching: true

    - run: gradle integrationTest

    - run:
        name: Save test results
        command: |
          mkdir -p ~/test-results/junit/
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
        when: always

    - store_test_results:
        path: ~/test-results

    - store_artifacts:
        path: ~/test-results/junit

version: 2

jobs:
  build:
    <<: *job_defaults
    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: gradle dependencies

    - save_cache:
        paths:
        - ~/.gradle
        key: v1-dependencies--{{ checksum "build.gradle" }}

    # run tests!
    - run: gradle test

    - run:
        name: Save test results
        command: |
          mkdir -p ~/test-results/junit/
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
        when: always

    - store_test_results:
        path: ~/test-results

    - store_artifacts:
        path: ~/test-results/junit

  integration_test_18060ce:
    <<: *job_defaults
    steps:
    - run_integration_test:
        docker_version: 18.06.0-ce

  integration_test_17030ce:
    <<: *job_defaults
    steps:
    - run_integration_test:
        docker_version: 17.03.0-ce

workflows:
  version: 2
  workflow:
    jobs:
    - build
    - integration_test_17030ce
    - integration_test_18060ce